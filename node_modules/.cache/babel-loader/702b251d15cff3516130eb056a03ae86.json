{"ast":null,"code":"import { noteData } from './firebaseConnect';\n\nlet redux = require('redux');\n\nconst noteInitialState = {\n  isEdit: false,\n  editNote: {}\n}; // trang thai ban dau cua state\n//reducer quan ly state va action \n\nconst allReducer = (state = noteInitialState, action) => {\n  switch (action.type) {\n    case \"ADD_DATA\":\n      //console.log(action.getItem);\n      noteData.push(action.getItem);\n      return state;\n\n    case \"EDIT_DATA\":\n      return { ...state,\n        isEdit: !state.isEdit\n      };\n\n    case \"GET_EDIT_DATA\":\n      return { ...state,\n        editNote: action.editNote\n      };\n\n    default:\n      return state;\n  }\n};\n\nlet store = redux.createStore(allReducer); //store quan ly reducer\n\nstore.subscribe(function () {\n  console.log(\"subscribe\", JSON.stringify(store.getState()));\n});\nexport default store;","map":{"version":3,"sources":["/home/phuc/Desktop/redux/redux-note-app/note-app-redux/src/store.js"],"names":["noteData","redux","require","noteInitialState","isEdit","editNote","allReducer","state","action","type","push","getItem","store","createStore","subscribe","console","log","JSON","stringify","getState"],"mappings":"AAAA,SAAQA,QAAR,QAAuB,mBAAvB;;AAEA,IAAIC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAnB;;AAEA,MAAMC,gBAAgB,GAAG;AACrBC,EAAAA,MAAM,EAAE,KADa;AAErBC,EAAAA,QAAQ,EAAE;AAFW,CAAzB,C,CAGE;AACF;;AACA,MAAMC,UAAU,GAAG,CAACC,KAAK,GAAGJ,gBAAT,EAA2BK,MAA3B,KAAsC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,UAAL;AACI;AACAT,MAAAA,QAAQ,CAACU,IAAT,CAAcF,MAAM,CAACG,OAArB;AACA,aAAOJ,KAAP;;AACJ,SAAK,WAAL;AACI,aAAO,EAAC,GAAGA,KAAJ;AAAUH,QAAAA,MAAM,EAAC,CAACG,KAAK,CAACH;AAAxB,OAAP;;AACJ,SAAK,eAAL;AACI,aAAO,EAAC,GAAGG,KAAJ;AAAUF,QAAAA,QAAQ,EAACG,MAAM,CAACH;AAA1B,OAAP;;AACJ;AACI,aAAOE,KAAP;AAVR;AAYH,CAbD;;AAeA,IAAIK,KAAK,GAAGX,KAAK,CAACY,WAAN,CAAkBP,UAAlB,CAAZ,C,CAA2C;;AAC3CM,KAAK,CAACE,SAAN,CAAgB,YAAU;AACtBC,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAwBC,IAAI,CAACC,SAAL,CAAeN,KAAK,CAACO,QAAN,EAAf,CAAxB;AACH,CAFD;AAGA,eAAeP,KAAf","sourcesContent":["import {noteData} from './firebaseConnect';\n\nlet redux = require('redux');\n\nconst noteInitialState = {\n    isEdit: false,\n    editNote: {}\n};// trang thai ban dau cua state\n//reducer quan ly state va action \nconst allReducer = (state = noteInitialState, action) => {\n    switch (action.type) {\n        case \"ADD_DATA\":\n            //console.log(action.getItem);\n            noteData.push(action.getItem);\n            return state\n        case \"EDIT_DATA\":\n            return {...state,isEdit:!state.isEdit}\n        case \"GET_EDIT_DATA\":\n            return {...state,editNote:action.editNote}\n        default:\n            return state\n    }\n}\n\nlet store = redux.createStore(allReducer); //store quan ly reducer\nstore.subscribe(function(){\n    console.log(\"subscribe\",JSON.stringify(store.getState()));\n})\nexport default store;"]},"metadata":{},"sourceType":"module"}